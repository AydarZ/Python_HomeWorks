# Даны два массива чисел. Требуется вывести те элементы первого массива (в том порядке, в каком они идут в первом массиве), 
# которых нет во втором массиве. Пользователь вводит первый массив через пробел и второй через пробел на разных строках.
# [1, 2, 3, 4, 5]
# [1, 2, 3] -> [4, 5]

# def input_array(text: str) -> list:
#     return list(input(f'Введите через пробел {text}: ').split())

# array_1 = input_array('первый массив')
# array_2 = input_array('второй массив')
# print(*(i for i in array_1 if i not in array_2))



# Дан массив, состоящий из целых чисел. Напишите программу, которая в данном массиве определит количество элементов, 
# у которых два соседних и, при этом, оба соседних элемента меньше данного. Элементы массива вводятся на одной строке через пробел.
#  Массив состоит из целых чисел. Список не циклический
# [1, 2, 1, 3, 4, 3] -> 2 (2, 4)


# def input_array(text: str) -> list:
#     return list(input(f'Введите через пробел {text}: ').split())

# def find_new_array (array: list) -> int:
#     count = 0
#     new = []
#     for i in range(1, len(array)-1):
#         if array[i] > array[i-1] and array[i] > array[i+1]:
#             count +=1
#             new.append(array[i])
#     return count, *new


# list_1 = input_array('массив')
# print(find_new_array(list_1))



# Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу. 
# Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать. 
# Вводится список чисел через пробел в одну строку. (сочетания без повторений)
# [2, 2, 2, 2] -> 6

# def input_array(text: str) -> list:
#     return list(input(f'Введите через пробел {text}: ').split())

# def find_result(array: list) -> int:
#     count = 0
#     for i in range(len(array)):
#         for j in range(i+1, len(array)):
#             if array[i] == array[j]:
#                 count +=1
#     return count


# list_1 = input_array('массив')
# print(find_result(list_1))

# Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n (включая 1, но исключая само n) 
# равна числу m и наоборот. Например, 220 и 284 – дружественные числа. По данному числу k выведите все пары дружественных чисел, 
# каждое из которых не превосходит k. Программа получает на вход одно натуральное число k, не превосходящее 10^5. 
# Программа должна вывести  все пары дружественных чисел, каждое из которых не превосходит k. Пары необходимо выводить 
# по одной в строке, разделяя пробелами. Каждая пара должна быть выведена только один раз (перестановка чисел новую пару не дает).
# 220 -> sum(1, 2, 4, 5, 10, 11, 20, 22, 44, 55,  110 ) = 284
# 284 -> sum(1, 2, 
# 4, 71,  142) = 220

def summ_of_divisors(num: int):
    summ = 0
    for i in range(1, num):
        if num % i == 0:
            summ += i
    return summ

def result (k: int):
    for i in range(1,k):
        for j in range(i+1,k+1):
            if summ_of_divisors(i) == j and summ_of_divisors(j) == i:
                print(f'{i} - {j}')

k = int(input('Введите число: '))
result(k)